<?php

namespace Integration\KYC;

use Illuminate\Http\Client\RequestException;
use Illuminate\Validation\ValidationException;
use Storage;
use WeDevBr\Celcoin\Clients\CelcoinKyc;
use WeDevBr\Celcoin\Tests\TestCase;

class CelcoinSendKycTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Storage::fake('test');
    }

    public function testSendKycSuccessful()
    {
        $kyc = new CelcoinKyc();
        $body = static::getKycBody();
        $response = $kyc->createKyc($body);
        $this->assertEquals(200, $response['status']);
    }

    public function testSendKycValidationRules()
    {
        $kyc = new CelcoinKyc();
        $body = static::getKycBody();
        $response = $kyc->createKyc($body);
        $this->expectException(ValidationException::class);
    }

    public function testSendKycFailedRequest()
    {
        $kyc = new CelcoinKyc();
        $body = static::getKycBody();
        $response = $kyc->createKyc($body);
        $this->assertEquals(500, $response['status']);
        $this->expectException(RequestException::class);
    }

    public function testSendKycWithMultipleFiles()
    {
        $kyc = new CelcoinKyc();
        $body = static::getKycBody();
        $response = $kyc->createKyc($body);
        $this->expectException(ValidationException::class);
    }

    public static function getKycBody(
        string $nifNumber = null,
        string $fileType = null,
        string $fileFront = null,
        string $fileVerse = null,
        bool $addVerse = true): array
    {
        $body = [
            'documentnumber' => $nifNumber ?? (string)fake()->randomNumber(11, true),
            'filetype' => $fileType ?? 'CONTRATO_SOCIAL',
            'front' => $fileFront ?? Storage::fake('test')->image('front.jpg'),
        ];

        if (count($body['documentnumber']) === 14) {
            $body['cnpj'] = $body['documentnumber'];
        } else {
            $body['cnpj'] = null;
        }

        if ($addVerse) {
            $body['verse'] = $fileVerse ?? Storage::fake('test')->image('verse.jpg');
        }

        return $body;
    }
}
